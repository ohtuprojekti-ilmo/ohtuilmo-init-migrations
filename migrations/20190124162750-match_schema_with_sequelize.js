'use strict'

/*
 * This migration updates the schema to match 1:1 with the schema generated by
 * Sequelize.
 */

module.exports = {
  up: async (query, Sequelize) => {
    // Add missing memberships.group_id
    await query.addColumn('memberships', 'group_id', Sequelize.INTEGER)

    // Remove association memberships.id <-> groups.id
    // The groups/memberships feature doesn't seem to be used right now, so we
    // don't need to worry about migrating data.
    await query.removeConstraint('memberships', 'memberships_id_fkey')

    // Add missing FK associations
    // memberships.group_id <-> groups.id
    await query.addConstraint('memberships', ['group_id'], {
      name: 'memberships_group_id_fkey',
      type: 'FOREIGN KEY',
      references: {
        table: 'groups',
        field: 'id'
      },
      onUpdate: 'CASCADE',
      onDelete: 'SET NULL'
    })
    // memberships.student_number <-> users.student_number
    return query.addConstraint('memberships', ['student_number'], {
      name: 'memberships_student_number_fkey',
      type: 'FOREIGN KEY',
      references: {
        table: 'users',
        field: 'student_number'
      },
      onUpdate: 'CASCADE',
      onDelete: 'SET NULL'
    })
  },

  down: async (query) => {
    // remove added associations
    await query.removeConstraint(
      'memberships',
      'memberships_student_number_fkey'
    )
    await query.removeConstraint('memberships', 'memberships_group_id_fkey')

    // remove added column
    await query.removeColumn('memberships', 'group_id')
    // add removed association memberships.id <-> groups.id
    return query.addConstraint('memberships', ['id'], {
      name: 'memberships_id_fkey',
      type: 'FOREIGN KEY',
      references: {
        table: 'groups',
        field: 'id'
      },
      onUpdate: 'CASCADE',
      // Oddly enough the constraint does not have Sequelize's default
      // ON DELETE SET NULL, but ON DELETE CASCADE
      onDelete: 'CASCADE'
    })
  }
}
